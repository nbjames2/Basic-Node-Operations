1. Run the commands sort, wc and uniq on the commands.js file. Explain how they work and what the output was.

A - Sort sorted each line of the file into alphabetical order, even indents were counted as characters to sort so it created these steps down the page and each step was alphabatized as well.
  - wc counted 42 lines, 124 words and 1212 characters.
  - uniq removes any duplicate lines, there were none in the file so it just printed out the entire contents.

2. Using the pipe (|) connect at least two commands and run it on commands.js. Explain what the output was and why the specific data was outputted.

A - $ sort commands.js | wc
	result was 43 124 1213 - it looks like sort added a linebreak which would account for the extra character and extra line.

6. 
const input = "Swarthy pirates need more swagger";
let reverseString = (inputString) => {
    array = input.split('');
    tempArray = [];
    array2 = [];
    count = 0;
    array.forEach((currentItem, key, array) => {
        if (currentItem === " ") {
            tempArray.reverse();
            let joined = tempArray.join('');
            array2.push(joined);
            tempArray.length = 0;
        } else if (Object.is(array.length -1, key)) {
            tempArray.push(currentItem);
            tempArray.reverse();
            let joined = tempArray.join('');
            array2.push(joined);
        } else {
            tempArray.push(currentItem);
        }
    });
    result = array2.join(' ');
    return result;
}
console.log(reverseString(input));